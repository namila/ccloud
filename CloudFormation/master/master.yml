Parameters:

  # For the network
  VPCCIDRBlock:
    Description : CIDR Block for the VPC
    Type: String
    Default: 172.32.0.0/16

  PublicSubnet1Block:
    Description: CIDR Block for first public subnet
    Type: String
    Default: 172.33.1.0/24

  PublicSubnet2Block:
    Description: CIDR Block for second public subnet
    Type: String
    Default: 172.33.2.0/24

  PrivateSubnet1Block:
    Description: CIDR Block for first private subnet
    Type: String
    Default: 172.33.3.0/24

  PrivateSubnet2Block:
    Description: CIDR Block for second private subnet
    Type: String
    Default: 172.33.4.0/24

  
  # For VMs
  VmType:
    Description: Type of VM to be used
    Type: String
    Default: t2.micro

  MinimumNumberOfVms:
    Description: Minimum number of VMs in the Cluster
    Type: Number
    Default: 2

  DesiredNumberOfVms:
    Description: Number of VMs in the Cluster
    Type: Number
    Default: 2

  MaximumNumberOfVms:
    Description: Maximum number of VMs in the Cluster
    Type: Number
    Default: 4
  
  AutoScalingCoolDown:
    Description: Number of seconds to cool down after auto scaling activity
    Type: Number
    Default: 30
  
  HealthCheckGracePeriod:
    Description: Number of seconds wait before starting heartbeat test
    Type: Number
    Default: 120

  KeyName:
    Description: key pair to be used
    Type: String
    Default: namila-ohio

  
  VmAMI:
    Description: AMI to be used for VMs
    Type: String
    Default: ami-0307f7ccf6ea35750


# For Employee service

  EmployeeServiceDockerImage:
    Description: Employee Service Docker Image
    Type: String
    Default: namila/ccloud-employee-service:latest
  EmployeeServiceReplication:
    Description: Desired count for employee service
    Type: Number
    Default: 2
  EmployeeServicePath:
    Description: Uri of Employee Service
    Type: String
    Default: /employees/*
  
  EmployeeServiceHealthCheckPath:
    Description: service health check path
    Type: String
    Default: /health

# For Products service

  ProductsServiceDockerImage:
    Description: Product Service Docker Image
    Type: String
    Default: namila/ccloud-products-service:latest
  ProductsServiceReplication:
    Description: Desired count for products service
    Type: Number
    Default: 2
  
  ProductsServicePath:
    Description: Uri for Products Service
    Type: String
    Default: /products

  ProductsServiceHealthCheckPath:
    Description: service health check path
    Type: String
    Default: /health
  


Resources:

# Creating the network for ccloud
  CCloudNetwork:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/ccloud-template-bucket/network/ccloud-network.yml
      Parameters:
        VPCCIDRBlock: !Ref VPCCIDRBlock
        PublicSubnet1Block: !Ref PublicSubnet1Block
        PublicSubnet2Block: !Ref PublicSubnet2Block
        PrivateSubnet1Block: !Ref PrivateSubnet1Block
        PrivateSubnet2Block: !Ref PrivateSubnet2Block


# Security groups for ccloud
  CCloudSecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "https://s3.amazonaws.com/ccloud-template-bucket/security_groups/ccloud-security-groups.yml"
      Parameters:
        VPC: !GetAtt CCloudNetwork.Outputs.VPC



# CCloud VMs
  CCloudCluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "https://s3.amazonaws.com/ccloud-template-bucket/vms/ccloud-vms.yml"
      Parameters:
        VmType: !Ref VmType
        VPC: !GetAtt CCloudNetwork.Outputs.VPC
        Subnets: !GetAtt CCloudNetwork.Outputs.PrivateSubnets
        SecurityGroup: !GetAtt CCloudSecurityGroups.Outputs.CCloudVMSecurityGroup
        VmAMI: !Ref VmAMI
        MinimumNumberOfVms: !Ref MinimumNumberOfVms
        DesiredNumberOfVms: !Ref DesiredNumberOfVms
        MaximumNumberOfVms: !Ref MaximumNumberOfVms
        AutoScalingCoolDown: !Ref AutoScalingCoolDown
        HealthCheckGracePeriod: !Ref HealthCheckGracePeriod
        KeyName: !Ref KeyName

# load balancer
  CCloudLoadBalancer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "https://s3.amazonaws.com/ccloud-template-bucket/load_balancer/ccloud-load-balancer.yml"
      Parameters:
        VPC: !GetAtt CCloudNetwork.Outputs.VPC
        Subnets: !GetAtt CCloudNetwork.Outputs.PublicSubnets
        SecurityGroup: !GetAtt CCloudSecurityGroups.Outputs.CCloudLoadBalancerSecurityGroup

# Employee Service
  EmployeeService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/ccloud-template-bucket/employee_service/employee-service.yml
      Parameters:
        DockerImage: !Ref EmployeeServiceDockerImage
        VPC: !GetAtt CCloudNetwork.Outputs.VPC
        Cluster: !GetAtt CCloudCluster.Outputs.CCloudCluster
        Replication: !Ref EmployeeServiceReplication
        LoadBalancerListener: !GetAtt CCloudLoadBalancer.Outputs.LoadBalancerListener
        ServicePath: !Ref EmployeeServicePath
        HealthCheckPath: !Ref EmployeeServiceHealthCheckPath
        ContainerPort: 3000
        ServiceAutoScalingRoleARN: !GetAtt CCloudCluster.Outputs.ECSServiceAutoScalingRole
        


  # DynamoreDb for storing data
  DynamoDbService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/ccloud-template-bucket/dynamoDb_service/dynamoDb_service.yml

  # Elasticsearch indexing service
  ElasticsearchService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/ccloud-template-bucket/elasticsearch_service/elasticsearch_service.yml
      Parameters:
        VPCEndpointSubnet: !Select [0,!Split [',',!GetAtt CCloudNetwork.Outputs.PrivateSubnets ]]
        SecurityGroup: !GetAtt CCloudSecurityGroups.Outputs.CCloudElasticSearchServiceSecurityGroup
  
  # Lambda funtion to index records
  IndexLambdaService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/ccloud-template-bucket/index_lambda_service/index_lambda_service.yml
      Parameters:
        ElasticSearchSubnet: !Select [0,!Split [',',!GetAtt CCloudNetwork.Outputs.PrivateSubnets ]]
        ElasticSearchSecurityGroup: !GetAtt CCloudSecurityGroups.Outputs.CCloudElasticSearchServiceSecurityGroup
        TableStreamARN: !GetAtt DynamoDbService.Outputs.ProductTableStreamARN
        ElasticSearchDomain: !GetAtt ElasticsearchService.Outputs.ElasticsearchServiceEndPoint

  ProductsService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/ccloud-template-bucket/products_service/products-service.yml
      Parameters:
        DockerImage: !Ref ProductsServiceDockerImage
        VPC: !GetAtt CCloudNetwork.Outputs.VPC
        Cluster: !GetAtt CCloudCluster.Outputs.CCloudCluster
        Replication: !Ref ProductsServiceReplication
        LoadBalancerListener: !GetAtt CCloudLoadBalancer.Outputs.LoadBalancerListener 
        ServicePath: !Ref ProductsServicePath
        HealthCheckPath: !Ref ProductsServiceHealthCheckPath
        ElasticSearchDomain: !GetAtt ElasticsearchService.Outputs.ElasticsearchServiceEndPoint


Outputs:
  EmployeeServiceUrl:
    Description: EmployeeService URL
    Value: !Join ["/", [!GetAtt CCloudLoadBalancer.Outputs.CCloudLoadBalancerUrl, "employees/"]]
  
  LoadBalancerDNS:
    Description: Load balancer URL
    Value: !GetAtt CCloudLoadBalancer.Outputs.CCloudLoadBalancerUrl



    





        
  